{"version":3,"sources":["webpack:///./src/hooks/use-posts.js","webpack:///./src/components/hero.js","webpack:///./src/hooks/use-instagram.js","webpack:///./src/components/insta.js","webpack:///./src/components/post-preview.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/hooks/use-sitemetadata.js","webpack:///./src/components/layout.js","webpack:///./src/components/read-link.js"],"names":["usePosts","_2762745283","data","allMdx","nodes","map","post","title","frontmatter","author","slug","image","excerpt","ImageBackground","Object","styled_base_browser_esm","BackgroundImage","target","name","styles","TextBox","Hero","_1746109120","core_browser_esm","Tag","fluid","sharp","fadeIn","gatsby_browser_entry","to","useInstagram","_2762986375","allInstaNode","node","_objectSpread","localFile","childImageSharp","id","caption","username","Insta","instaPhotos","react_default","a","Fragment","css","_ref","photo","key","href","_ref2","gatsby_image_default","alt","_ref3","PostPreview","_ref4","post_preview_ref","post_preview_ref2","post_preview_ref3","read_link","__webpack_exports__","posts","hero","layout","post_preview","insta","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","NavLink","Link","props","fontWeight","Header","activeClassName","useSiteMetadata","_3977732298","site","siteMetadata","Layout","children","_useSiteMetadata","description","layout_ref","Helmet_default","lang","content","header","layout_ref2","ReadLink","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-pages-index-js-d4c1add2ab91ffd3190e.js","sourcesContent":["import { graphql, useStaticQuery } from 'gatsby';\n\nconst usePosts = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMdx {\n        nodes {\n          frontmatter {\n            title\n            author\n            slug\n            image {\n              sharp: childImageSharp {\n                fluid(\n                  maxWidth: 100\n                  maxHeight: 100\n                  duotone: { shadow: \"#663399\", highlight: \"#ddbbff\" }\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp\n                }\n              }\n            }\n          }\n          excerpt\n        }\n      }\n    }\n  `);\n\n  return data.allMdx.nodes.map(post => ({\n    title: post.frontmatter.title,\n    author: post.frontmatter.author,\n    slug: post.frontmatter.slug,\n    image: post.frontmatter.image,\n    excerpt: post.excerpt,\n  }));\n};\n\nexport default usePosts;","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Link, graphql, useStaticQuery } from 'gatsby';\nimport BackgroundImage from 'gatsby-background-image';\n\nconst ImageBackground = styled(BackgroundImage)`\n    background-positon: top 20% center;\n    background-size: cover;\n    height:50vh;\n\n    + * { \n        margin-top:0;\n\n    }\n`;\n\nconst TextBox = styled('div')`\n    background-image: linear-gradient(to top,#ddbbffdd 2rem, #ddbbff00);\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    justify-content: flex-end;\n    padding: 0 calc((100vw - 550px)/2) 2rem;\n    width:100%;\n    h1 {\n        text-shadow: 1px 1px 3px #eeddff66;\n        font-size: 2.25rem;\n    }\n\n    p,\n    a {\n        color:#222;\n        margin-top: 0;\n    }\n\n    a {\n        margin-top:0.5rem;\n    }\n`;\n\nconst Hero = () => {\n    const { image } = useStaticQuery(graphql`\n        query {\n            image: file(relativePath: { eq: \"background-image.jpg\"}) {\n                sharp: childImageSharp {\n                    fluid {\n                        ...GatsbyImageSharpFluid_withWebp\n                    }\n\n                }\n\n            }\n        }\n    `)\n\n    return (\n    <ImageBackground Tag=\"section\" fluid={image.sharp.fluid} fadeIn=\"soft\">\n        <TextBox>\n    <h1>Frontend Master + gatsby &hearts;</h1>\n        <p>\n            hello <Link to =\"/ablout\">learn ablout me &rarr;</Link>\n        </p>\n        </TextBox>\n    </ImageBackground>\n    );\n};\n\nexport default Hero;","import { graphql, useStaticQuery } from 'gatsby';\n\nconst useInstagram = () => {\n    const data = useStaticQuery(graphql`\n    query {\n        allInstaNode(limit:12) {\n          nodes {\n               id \n            caption\n            username\n            localFile {\n              childImageSharp {\n                fluid(maxWidth:120 maxHeight:120) {\n                  ...GatsbyImageSharpFluid_withWebp\n                }\n              }\n            }\n          }\n        }\n      }\n    \n    `);\n    return data.allInstaNode.nodes.map(node => ({\n        ...node.localFile.childImageSharp,\n        id: node.id,\n        caption: node.caption,\n        username: node.username,\n    }))\n};\n\nexport default useInstagram;","import React from 'react';\nimport Image from 'gatsby-image';\nimport { css } from '@emotion/core';\nimport useInstagram from '../hooks/use-instagram';\n\nconst Insta = () => {\n    const instaPhotos = useInstagram();\n    const { username } = instaPhotos[0];\n\n    return (\n    <>\n        <h2> Instagram posts from @{username}</h2>\n            <div\n            css={css`\n            display: flex;\n            flex-wrap: wrap;\n            justify-content: space-between;\n            margin: 1rem -0.5rem;\n            `}>\n                {instaPhotos.map(photo => (\n                    <a\n                    key={photo.id}\n                    href={`https://instagram.com/p/${photo.id}/`}\n                    css={css`\n                    box-shadow: 0;\n                    display: block;\n                    margin: 0.5rem;\n                    max-width: calc(33% - 1rem);\n                    width: 120px;\n                    transition: 200ms box-shadow linear;\n                    :focus,\n                    :hover {\n                        box-shadow: 0 2px 14px #22222244;\n                        z-index: 1;0\n                    }\n                    `}\n                    \n                    >\n                        <Image \n                         fluid={photo.fluid}\n                         alt={photo.caption}\n                         css={css`\n                             width: 100%\n                            \n                             * {\n                                margin-top: 0; \n                            }\n                        `}\n                        />\n                    </a>\n                ))}\n            </div>\n            <a href={`https://instagram.com/${username}`}>\n                See more on instagram &rarr;\n            </a>\n        </>\n    );\n};\n\nexport default Insta;","import React from 'react';\nimport { css } from '@emotion/core';\nimport { Link } from 'gatsby';\nimport Image from 'gatsby-image';\nimport ReadLink from './read-link';\n\nconst PostPreview = ({ post }) => (\n    <article\n        css={css`\n            border-bottom: 1px solid #ddd;\n            display: flex;\n\n            margin-top: 0rem;\n            padding-bottom: 1rem;\n                :first-of-type {\n                margin-top: 1rem;\n                }\n            `}\n    >\n        <Link to={post.slug} \n            css={css`\n            margin: 1rem 1rem 0 0;\n             width:100px;\n         `}\n         >\n            <Image\n                fluid={post.image.sharp.fluid}\n                css={css`\n                * {\n                    margin-top=0;\n                }\n                `}\n                alt={post.title}\n            />\n        </Link>\n        <div>\n        <h3><Link to={post.slug}>{post.title}</Link></h3>\n        <p>{post.excerpt}</p>\n        <ReadLink to={post.slug}>read this post &rarr;</ReadLink>\n        </div>\n    </article>\n);\n\nexport default PostPreview;","import React from 'react';\nimport Layout from '../components/layout';\nimport usePosts from '../hooks/use-posts';\nimport Hero from '../components/hero';\nimport Insta from '../components/insta';\nimport PostPreview from '../components/post-preview';\n\nexport default () => {\n  const posts = usePosts();\n  return (\n    <>\n      <Hero />\n      <Layout>\n        <h2>Read my blog</h2>\n        {posts.map(post => (\n          <PostPreview key={post.slug} post={post} />\n        ))}\n        <Insta />\n      </Layout>\n    </>\n  );\n};","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\nimport { Link } from 'gatsby';\n\nconst NavLink = styled(Link)`\n  color: #222;\n  font-size: 1rem;\n  font-weight: ${props => props.fontWeight || 'normal'};\n  line-height: 1;\n  margin: 0 0.5rem 0 0;\n  padding: 0.25rem;\n  text-decoration: none;\n\n  &.current-page {\n    border-bottom: 2px solid #222;\n  }\n\n  &:last-of-type {\n    margin-right: 0;\n  }\n`;\n\nconst Header = () => (\n  <header\n    css={css`\n      background: #eee;\n      border-bottom: 1px solid #ddd;\n      display: flex;\n      justify-content: space-between;\n      padding: 0.5rem calc((100vw - 550px - 0.5rem) / 2);\n    `}\n  >\n    <NavLink to=\"/\" fontWeight=\"bold\">\n      FEM Workshop\n    </NavLink>\n    <nav\n      css={css`\n        margin-top: 0;\n      `}\n    >\n      <NavLink to=\"/\" activeClassName=\"current-page\">\n        Home\n      </NavLink>\n      <NavLink to=\"/about/\" activeClassName=\"current-page\">\n        About\n      </NavLink>\n    </nav>\n  </header>\n);\n\nexport default Header;\n","import { useStaticQuery, graphql } from 'gatsby';\n\nconst useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    {\n      site {\n        siteMetadata {\n          title\n          description\n        }\n      }\n    }\n  `);\n\n  return data.site.siteMetadata;\n};\n\nexport default useSiteMetadata;\n","import React from 'react';\nimport { Global, css } from '@emotion/core';\nimport Helmet from 'react-helmet';\nimport Header from './header';\nimport useSiteMetadata from '../hooks/use-sitemetadata';\n\nconst Layout = ({ children }) => {\n  const { title, description } = useSiteMetadata();\n\n  return (\n    <>\n      <Global\n        styles={css`\n          * {\n            box-sizing: border-box;\n            margin: 0;\n          }\n\n          /* More info: https://bit.ly/2PsCnzk */\n          * + * {\n            margin-top: 1rem;\n          }\n\n          html,\n          body {\n            margin: 0;\n            color: #555;\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,\n              Helvetica, Arial, sans-serif, 'Apple Color Emoji',\n              'Segoe UI Emoji', 'Segoe UI Symbol';\n            font-size: 18px;\n            line-height: 1.4;\n\n            /* remove margin for the main div that Gatsby mounts into */\n            > div {\n              margin-top: 0;\n            }\n          }\n\n          h1,\n          h2,\n          h3,\n          h4,\n          h5,\n          h6 {\n            color: #222;\n            line-height: 1.1;\n\n            + * {\n              margin-top: 0.5rem;\n            }\n          }\n\n          strong {\n            color: #222;\n          }\n\n          li {\n            margin-top: 0.25rem;\n          }\n        `}\n      />\n      <Helmet>\n        <html lang=\"en\" />\n        <title>{title}</title>\n        <meta name=\"description\" content={description} />\n      </Helmet>\n      <Header />\n      <main\n        css={css`\n          margin: 2rem auto;\n          max-width: 550px;\n        `}\n      >\n        {children}\n      </main>\n    </>\n  );\n};\n\nexport default Layout;\n","import styled from '@emotion/styled';\nimport { Link } from 'gatsby';\n\nconst ReadLink = styled(Link)`\n    display: inline-block;\n    font-size: 0.875rem;\n    `;\n\nexport default ReadLink;"],"sourceRoot":""}